name: Pipeline

on: push

jobs:

  # Build package
  build:
    name: üêç Build
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4

    - name: Set Up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.5"
      env:
        PIP_TRUSTED_HOST: "pypi.python.org pypi.org files.pythonhosted.org"

    - name: Install Dependencies and Build
      env:
        PIP_TRUSTED_HOST: "pypi.python.org pypi.org files.pythonhosted.org"
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python setup.py install

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: dist/


  # Publish artifacts
  publish:
    name: üì¶ Publish
    if: startsWith(github.ref, 'refs/tags/')  # only publish on tag pushes
    needs:
    - build
    runs-on: ubuntu-20.04
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: dist/

    - name: Publish Artifacts
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  
  # Generate GitHub Release
  release:
    name: üì§ Release
    needs:
    - publish
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      id-token: write
    steps:
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
      